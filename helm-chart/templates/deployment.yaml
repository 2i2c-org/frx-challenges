apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "unnamed.fullname" . }}
  labels:
    {{- include "unnamed.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "unnamed.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "unnamed.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: db-migrate
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: /opt/unnamed-thingity-thing/comptest
          command:
            - python
            - manage.py
            - migrate
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: db
              mountPath: /opt/unnamed-thingity-thing/comptest/db.sqlite3
              subPath: db.sqlite3
              readOnly: false
        - name: admin-add
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: /opt/unnamed-thingity-thing/comptest
          command:
            - python
            - manage.py
            - promote
            - '{{ include "quoteList" .Values.adminUsers }}'
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: db
              mountPath: /opt/unnamed-thingity-thing/comptest/db.sqlite3
              subPath: db.sqlite3
              readOnly: false
      containers:
        - name: run-app
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: /opt/unnamed-thingity-thing/comptest
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          command:
            - gunicorn
            - --bind
            - 0.0.0.0:{{ .Values.service.port }}
            - comptest.wsgi
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: db
              mountPath: /opt/unnamed-thingity-thing/comptest/db.sqlite3
              subPath: db.sqlite3
              readOnly: false
            {{- if .Values.yamlSettings.enabled }}
            - name: django-yamlconf
              mountPath: /opt/unnamed-thingity-thing/comptest/comptest.yaml
              subPath: comptest.yaml
            {{- end }}
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-db-pvc
        {{- if .Values.yamlSettings.enabled }}
        - name: django-yamlconf
          configMap:
            name: {{ include "unnamed.fullname" . }}-django-yamlconf
        {{- end }}
